import { Component } from '@angular/core';
import { CfeDialogRespuesta } from "../models/cfe-dialog-config";
import { NgClass } from "@angular/common";
import * as i0 from "@angular/core";
import * as i1 from "../services/ngx-cfng-core-modal-dialog-config.service";
import * as i2 from "primeng/dynamicdialog";
import * as i3 from "@angular/platform-browser";
export class NgxCfngCoreModalDialogComponent {
    modalDialogConfigService;
    ref;
    config;
    sanitizer;
    containerClass;
    icono;
    titulo;
    descripcion;
    textoBotonConfirmar;
    textoBotonCancelar;
    tieneBotonCancelar;
    ocultarBotones;
    ocultarCierre;
    constructor(modalDialogConfigService, ref, config, sanitizer) {
        this.modalDialogConfigService = modalDialogConfigService;
        this.ref = ref;
        this.config = config;
        this.sanitizer = sanitizer;
        this.containerClass = this.config.data.containerClass;
        this.icono = this.config.data.tipoIcono;
        this.titulo = this.config.data.titulo || '';
        this.descripcion = this.config.data.descripcion || '';
        this.textoBotonConfirmar = this.config.data.textoBotonConfirmar || 'Confirmar';
        this.tieneBotonCancelar = this.config.data.tieneBotonCancelar || false;
        this.textoBotonCancelar = this.config.data.textoBotonCancelar || 'Cancelar';
        this.ocultarBotones = this.config.data.ocultarBotones || false;
        this.ocultarCierre = this.config.data.ocultarCierre || false;
    }
    ngOnInit() {
    }
    get iconoCerrar() {
        return this.modalDialogConfigService.getIconUrl('close.svg');
    }
    get iconoDialog() {
        return this.modalDialogConfigService.getIconUrl(`${this.icono}.svg`);
    }
    get mostrarDescripcion() {
        return this.descripcion !== '';
    }
    obtenerDescripcion() {
        return this.sanitizer.bypassSecurityTrustHtml(this.descripcion);
    }
    confirmar() {
        this.ref.close(CfeDialogRespuesta.Confirmado);
    }
    cancelar() {
        this.ref.close(CfeDialogRespuesta.Cancelado);
    }
    cerrar() {
        this.ref.close(CfeDialogRespuesta.Cerrado);
    }
    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "18.2.0", ngImport: i0, type: NgxCfngCoreModalDialogComponent, deps: [{ token: i1.NgxCfngCoreModalDialogConfigService }, { token: i2.DynamicDialogRef }, { token: i2.DynamicDialogConfig }, { token: i3.DomSanitizer }], target: i0.ɵɵFactoryTarget.Component });
    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "17.0.0", version: "18.2.0", type: NgxCfngCoreModalDialogComponent, isStandalone: true, selector: "ngx-cfng-core-modal-dialog", ngImport: i0, template: "<div class=\"p-2\" [ngClass]=\"containerClass\">\r\n  @if (!ocultarCierre) {\r\n    <div (click)=\"cerrar()\" class=\"absolute cursor-pointer cfe-dialog-cerrar\">\r\n      <img [src]=\"iconoCerrar\" alt=\"Cerrar\"/>\r\n    </div>\r\n  }\r\n\r\n  @if (icono) {\r\n    <div class=\"flex justify-content-center mb-4 cfe-dialog-icono\">\r\n      <img [src]=\"iconoDialog\" alt=\"Icono\">\r\n    </div>\r\n  }\r\n\r\n  <div class=\"text-center m-0 mb-4 font-semibold cfe-dialog-titulo\">\r\n    {{ titulo }}\r\n  </div>\r\n\r\n  @if (mostrarDescripcion) {\r\n    <p [innerHTML]=\"obtenerDescripcion()\" class=\"text-center text-lg mt-3 cfe-dialog-descripcion\">\r\n    </p>\r\n  }\r\n\r\n  @if (!ocultarBotones) {\r\n    <div class=\"flex justify-content-center mt-4\">\r\n      @if (tieneBotonCancelar) {\r\n        <button class=\"cfe-boton-secondary cfe-boton-lg mr-3\" (click)=\"cancelar()\">\r\n          {{ textoBotonCancelar }}\r\n        </button>\r\n      }\r\n\r\n      <button class=\"cfe-boton-primary cfe-boton-lg\" (click)=\"confirmar()\">\r\n        {{ textoBotonConfirmar }}\r\n      </button>\r\n    </div>\r\n  }\r\n\r\n</div>\r\n", styles: [".cfe-dialog-cerrar{right:20px;top:20px}.cfe-dialog-cerrar img{width:18px}.cfe-dialog-icono img{width:65px}.cfe-dialog-titulo{font-family:var(--mpfn-font-semi-bold),sans-serif;font-size:1.5em}.cfe-dialog-descripcion{font-family:var(--mpfn-font-regular),sans-serif;font-size:1.05em}\n"], dependencies: [{ kind: "directive", type: NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }] });
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "18.2.0", ngImport: i0, type: NgxCfngCoreModalDialogComponent, decorators: [{
            type: Component,
            args: [{ selector: 'ngx-cfng-core-modal-dialog', standalone: true, imports: [
                        NgClass
                    ], template: "<div class=\"p-2\" [ngClass]=\"containerClass\">\r\n  @if (!ocultarCierre) {\r\n    <div (click)=\"cerrar()\" class=\"absolute cursor-pointer cfe-dialog-cerrar\">\r\n      <img [src]=\"iconoCerrar\" alt=\"Cerrar\"/>\r\n    </div>\r\n  }\r\n\r\n  @if (icono) {\r\n    <div class=\"flex justify-content-center mb-4 cfe-dialog-icono\">\r\n      <img [src]=\"iconoDialog\" alt=\"Icono\">\r\n    </div>\r\n  }\r\n\r\n  <div class=\"text-center m-0 mb-4 font-semibold cfe-dialog-titulo\">\r\n    {{ titulo }}\r\n  </div>\r\n\r\n  @if (mostrarDescripcion) {\r\n    <p [innerHTML]=\"obtenerDescripcion()\" class=\"text-center text-lg mt-3 cfe-dialog-descripcion\">\r\n    </p>\r\n  }\r\n\r\n  @if (!ocultarBotones) {\r\n    <div class=\"flex justify-content-center mt-4\">\r\n      @if (tieneBotonCancelar) {\r\n        <button class=\"cfe-boton-secondary cfe-boton-lg mr-3\" (click)=\"cancelar()\">\r\n          {{ textoBotonCancelar }}\r\n        </button>\r\n      }\r\n\r\n      <button class=\"cfe-boton-primary cfe-boton-lg\" (click)=\"confirmar()\">\r\n        {{ textoBotonConfirmar }}\r\n      </button>\r\n    </div>\r\n  }\r\n\r\n</div>\r\n", styles: [".cfe-dialog-cerrar{right:20px;top:20px}.cfe-dialog-cerrar img{width:18px}.cfe-dialog-icono img{width:65px}.cfe-dialog-titulo{font-family:var(--mpfn-font-semi-bold),sans-serif;font-size:1.5em}.cfe-dialog-descripcion{font-family:var(--mpfn-font-regular),sans-serif;font-size:1.05em}\n"] }]
        }], ctorParameters: () => [{ type: i1.NgxCfngCoreModalDialogConfigService }, { type: i2.DynamicDialogRef }, { type: i2.DynamicDialogConfig }, { type: i3.DomSanitizer }] });
//# sourceMappingURL=data:application/json;base64,